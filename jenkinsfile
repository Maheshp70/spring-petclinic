pipeline {
    agent { label 'MAVEN' }
    options { 
        timeout(time: 20, unit: 'MINUTES') 
    }
    triggers {
        pollSCM('* * * * *')
    }
    stages {
        stage('git') {
            steps {
                git url: 'https://github.com/Maheshp70/spring-petclinic.git', 
                    branch: 'develop'
            }
        }
        stage('build') {
            steps {
                sh 'mvn clean package'
                withSonarQubeEnv(installationName:'SONAR_CLOUD',credentialsId:'SONAR_CLOUD') {
                  sh 'mvn clean verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=jenkinsdec -Dsonar.projectKey=jenkinsdec_test'
                    }
            
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/spring-petclinic-*.jar'
                    junit testResults: '**/TEST-*.xml'
                }
            }
        }
        stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
    }

} 
